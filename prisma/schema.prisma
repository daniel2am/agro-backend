generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum StatusFazenda {
  ativa
  inativa
}

enum StatusInvernada {
  disponivel
  ocupada
  inativa
}

enum StatusLavoura {
  ativo
  inativo
}

enum TipoUsuario {
  usuario
  administrador
  gestor
}

enum TipoDispositivo {
  bastao
  balanca
  antena
  outro
}

enum TipoLeituraDispositivo {
  brinco
  peso
  antena
  outro
}

enum PapelUsuarioFazenda {
  administrador
  gestor
  colaborador
}

enum TipoFinanceiro {
  receita
  despesa
}

enum UnidadeIdade {
  dias
  meses
  anos
}

model Fazenda {
  id            String        @id @default(uuid())
  nome          String
  cidade        String
  estado        String
  cadastroIncra String        @unique
  car           String?
  areaTotal     Float?
  status        StatusFazenda @default(ativa)
  criadoEm      DateTime      @default(now())

  usuarios     FazendaUsuario[]
  invernadas   Invernada[]
  lavouras     Lavoura[]
  animais      Animal[]
  titulares    TitularFazenda[]
  dispositivos Dispositivo[]
  leituras     LeituraDispositivo[]
  Financeiro   Financeiro[]
  manejos      Manejo[]
  pesagens     Pesagem[]
  ocorrencias  Ocorrencia[]
  compras      CompraInsumo[]

  @@index([id, criadoEm])
}

model TitularFazenda {
  id                 String  @id @default(uuid())
  fazendaId          String
  nome               String
  cpfCnpj            String
  nacionalidade      String
  condicao           String
  percentualDetencao Float
  fazenda            Fazenda @relation(fields: [fazendaId], references: [id], onDelete: Cascade)
}

model FazendaUsuario {
  id        String              @id @default(uuid())
  usuarioId String
  fazendaId String
  papel     PapelUsuarioFazenda
  ativo     Boolean             @default(true)
  criadoEm  DateTime            @default(now())
  usuario   Usuario             @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  fazenda   Fazenda             @relation(fields: [fazendaId], references: [id], onDelete: Cascade)

  @@index([usuarioId, fazendaId])
}

model Animal {
  id           String               @id @default(uuid())
  brinco       String
  fazendaId    String
  invernadaId  String?
  nome         String?
  sexo         String?
  peso         Float?
  lote         String?
  raca         String?
  idade        Int?
  unidadeIdade UnidadeIdade?
  leituras     LeituraDispositivo[]
  criadoEm     DateTime             @default(now())
  atualizadoEm DateTime             @updatedAt
  fazenda      Fazenda              @relation(fields: [fazendaId], references: [id], onDelete: Cascade)
  invernada    Invernada?           @relation(fields: [invernadaId], references: [id], name: "AnimaisNaInvernada", onDelete: SetNull)
  Sanidade     Sanidade[]
  medicamentos Medicamento[]
  manejos      Manejo[]
  pesagens     Pesagem[]
  ocorrencias  Ocorrencia[]

  @@unique([fazendaId, brinco])
  @@index([fazendaId])
  @@index([invernadaId])
}

model Invernada {
  id        String               @id @default(uuid())
  nome      String
  area      Float
  poligono  Json?
  status    StatusInvernada      @default(disponivel)
  fazendaId String
  criadoEm  DateTime             @default(now())
  fazenda   Fazenda              @relation(fields: [fazendaId], references: [id], onDelete: Cascade)
  animais   Animal[]             @relation("AnimaisNaInvernada")
  leituras  LeituraDispositivo[]

  @@index([fazendaId, nome])
}

model Lavoura {
  id          String        @id @default(uuid())
  nome        String
  cultura     String
  areaHa      Float
  dataPlantio DateTime
  status      StatusLavoura @default(ativo)
  fazendaId   String
  criadoEm    DateTime      @default(now())
  fazenda     Fazenda       @relation(fields: [fazendaId], references: [id], onDelete: Cascade)

  @@index([fazendaId, dataPlantio])
}

model MarcaModeloDispositivo {
  id           String          @id @default(uuid())
  fabricante   String
  modelo       String
  tipo         TipoDispositivo
  protocolo    String?
  infoExtra    String?
  dispositivos Dispositivo[]
}

model Dispositivo {
  id            String   @id @default(uuid())
  nome          String
  usuarioId     String?
  fazendaId     String?
  marcaModeloId String
  numeroSerie   String?
  ativo         Boolean  @default(true)
  criadoEm      DateTime @default(now())

  marcaModelo MarcaModeloDispositivo @relation(fields: [marcaModeloId], references: [id], onDelete: Cascade)
  usuario     Usuario?               @relation(fields: [usuarioId], references: [id], onDelete: SetNull)
  fazenda     Fazenda?               @relation(fields: [fazendaId], references: [id], onDelete: SetNull)
  leituras    LeituraDispositivo[]

  @@index([usuarioId])
  @@index([fazendaId])
}

model LeituraDispositivo {
  id            String                 @id @default(uuid())
  animalId      String?
  dispositivoId String
  fazendaId     String
  invernadaId   String?
  usuarioId     String
  tipo          TipoLeituraDispositivo
  valor         String
  dataLeitura   DateTime               @default(now())
  metadados     Json?

  animal      Animal?     @relation(fields: [animalId], references: [id], onDelete: SetNull)
  dispositivo Dispositivo @relation(fields: [dispositivoId], references: [id], onDelete: Cascade)
  fazenda     Fazenda     @relation(fields: [fazendaId], references: [id], onDelete: Cascade)
  invernada   Invernada?  @relation(fields: [invernadaId], references: [id], onDelete: SetNull)
  usuario     Usuario     @relation(fields: [usuarioId], references: [id], onDelete: Cascade)

  @@index([fazendaId, dataLeitura])
  @@index([animalId, dataLeitura])
}

model Usuario {
  id                String      @id @default(uuid())
  nome              String
  email             String      @unique
  senha             String
  fotoUrl           String?
  status            String      @default("ativo")
  tipo              TipoUsuario @default(usuario)
  criadoEm          DateTime    @default(now())
  atualizadoEm      DateTime    @updatedAt
  ultimoLogin       DateTime?
  googleId          String?     @unique
  appleId           String?     @unique
  resetToken        String?     @db.VarChar(255)
  resetTokenExpires DateTime?
  termosAceitosEm   DateTime?

  fazendas     FazendaUsuario[]
  acessos      LogAcesso[]
  dispositivos Dispositivo[]
  leituras     LeituraDispositivo[]
  compras      CompraInsumo[]

  @@index([status])
}

model LogAcesso {
  id        String   @id @default(uuid())
  usuarioId String
  data      DateTime @default(now())
  acao      String
  ip        String?
  userAgent String?
  usuario   Usuario  @relation(fields: [usuarioId], references: [id], onDelete: Cascade)

  @@index([usuarioId, data])
}

model Sanidade {
  id          String   @id @default(uuid())
  animalId    String
  data        DateTime
  tipo        String
  observacoes String?
  criadoEm    DateTime @default(now())

  animal Animal @relation(fields: [animalId], references: [id], onDelete: Cascade)

  @@index([animalId, data])
}

model Financeiro {
  id        String         @id @default(uuid())
  fazendaId String
  data      DateTime
  descricao String
  valor     Float
  tipo      TipoFinanceiro
  criadoEm  DateTime       @default(now())

  // NOVO: vínculo 1–1 com CompraInsumo
  compraInsumoId String?       @unique
  compraInsumo   CompraInsumo? @relation(fields: [compraInsumoId], references: [id], onDelete: Cascade)

  fazenda Fazenda @relation(fields: [fazendaId], references: [id], onDelete: Cascade)

  @@index([fazendaId, data])
  @@index([tipo])
}

model Medicamento {
  id               String       @id @default(uuid())
  animalId         String
  nome             String
  data             DateTime
  dosagem          String?
  viaAplicacao     String?
  observacoes      String?
  criadoEm         DateTime     @default(now())
  proximaAplicacao DateTime?
  lembreteAtivo    Boolean      @default(false)
  notificacaoId    String?      @unique
  notificacao      Notificacao? @relation(fields: [notificacaoId], references: [id])
  animal           Animal       @relation(fields: [animalId], references: [id], onDelete: Cascade)

  @@index([animalId, data])
  @@index([proximaAplicacao])
}

model Notificacao {
  id        String   @id @default(uuid())
  titulo    String
  mensagem  String
  lida      Boolean  @default(false)
  createdAt DateTime @default(now())

  medicamento Medicamento?
}

model Manejo {
  id         String   @id @default(uuid())
  fazendaId  String
  animalId   String
  tipo       String
  data       DateTime
  observacao String?
  criadoEm   DateTime @default(now())

  animal  Animal  @relation(fields: [animalId], references: [id], onDelete: Cascade)
  fazenda Fazenda @relation(fields: [fazendaId], references: [id], onDelete: Cascade)

  @@index([fazendaId, data])
  @@index([animalId, data])
}

model Pesagem {
  id        String   @id @default(uuid())
  animalId  String
  fazendaId String
  data      DateTime
  pesoKg    Float
  criadoEm  DateTime @default(now())

  animal  Animal  @relation(fields: [animalId], references: [id], onDelete: Cascade)
  fazenda Fazenda @relation(fields: [fazendaId], references: [id], onDelete: Cascade)

  @@index([animalId, data])
  @@index([fazendaId, data])
}

model Ocorrencia {
  id        String   @id @default(uuid())
  fazendaId String
  animalId  String?
  titulo    String
  descricao String?
  data      DateTime
  tipo      String
  criadoEm  DateTime @default(now())

  fazenda Fazenda @relation(fields: [fazendaId], references: [id], onDelete: Cascade)
  animal  Animal? @relation(fields: [animalId], references: [id], onDelete: SetNull)

  @@index([fazendaId, data])
}

model Insumo {
  id       String   @id @default(uuid())
  nome     String
  unidade  String
  tipo     String
  criadoEm DateTime @default(now())
}

model CompraInsumo {
  id         String   @id @default(uuid())
  fazendaId  String
  usuarioId  String
  data       DateTime
  insumo     String
  quantidade Int
  unidade    String
  valor      Float
  fornecedor String?
  criadoEm   DateTime @default(now())

  fazenda Fazenda @relation(fields: [fazendaId], references: [id], onDelete: Cascade)
  usuario Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)

  // NOVO: lado reverso do 1–1
  financeiro Financeiro?

  @@index([fazendaId, data])
  @@index([usuarioId, data])
}
